
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Human readable names for the layers
#define LAYER_DEFAULT 0
#define LAYER_KEYPAD  1
#define LAYER_FN      2
#define LAYER_MOD     3

/ {
    behaviors {
        // The bash script "bin/get_version" will add a macro that
        // outputs the version of the firmware
        #include "version.dtsi"

        td_sk: tap_dance_sticky_key {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHIFT>, <&kp CAPSLOCK>;
        };

        td_q: tap_dance_quotes {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp RA(SQT)>, <&kp RA(LS(SQT))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &none        &kp N1  &kp N2    &kp N3     &kp N4    &kp N5 &tog LAYER_KEYPAD                                                                    &mo LAYER_MOD &kp N6    &kp N7    &kp N8    &kp N9   &kp N0       &none
                &kp GRAVE    &kp Q   &kp W     &kp E      &kp R     &kp T  &kp DEL                                                                              &kp MINUS     &kp Y     &kp U     &kp I     &kp O    &kp P        &none
                &kp TAB      &kp A   &kp S     &kp D      &kp F     &kp G  &kp EQUAL         &sk LCTRL           &sk RGUI         &sk LGUI            &sk RCTRL &td_q         &kp H     &kp J     &kp K     &kp L    &kp SEMI     &kp BSLH
                &td_sk       &kp Z   &kp X     &kp C      &kp V     &kp B                                        &kp LBKT         &kp RBKT                                    &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH     &td_sk
                &mo LAYER_FN &none   &none     &kp LEFT   &kp RIGHT        &kp BSPC          &kp ESC             &sk LALT         &sk RALT            &kp ENTER &kp SPACE               &kp UP    &kp DOWN  &kp APOS &none        &mo LAYER_FN
            >;
        };

        layer_keypad {
            bindings = <
                &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo LAYER_MOD  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
                &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
                &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
                &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
                &mo LAYER_FN  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo LAYER_FN
            >;
        };

        layer_fn {
            bindings = <
                &kp F1  &kp F2  &kp F3    &kp F4   &kp F5  &kp F6                   &tog LAYER_KEYPAD                                                                &mo LAYER_MOD  &kp F7        &kp F8        &kp F9  &kp F10  &kp F11  &kp F12
                &trans  &trans  &trans    &trans   &trans  &trans              &kp PAGE_UP                                                                &none  &trans        &trans        &trans   &trans   &trans   &trans
                &trans  &trans  &trans    &trans   &trans  &trans            &kp PAGE_DOWN  &trans  &trans                  &trans           &trans  &kp C_MUTE  &trans        &trans        &trans   &trans   &trans   &trans
                &trans  &trans  &trans    &trans   &trans  &trans                                   &trans                  &trans                               &trans        &trans        &trans   &trans   &trans   &trans
                &trans  &trans  &trans  &kp HOME  &kp END                           &trans  &trans  &trans                  &trans  &kp PRINTSCREEN      &trans          &kp C_VOL_UP  &kp C_VOL_DN   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
                &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
                &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
                &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
                &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
                &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
